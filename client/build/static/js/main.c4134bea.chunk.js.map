{"version":3,"sources":["utils/auth/auth-service.js","utils/auth/index.js","utils/auth/actions.js","components/NewsCard.js","pages/Member.js","utils/API.js","components/FullPageSpinner.js","components/Alert.js","components/LoginAlert.js","components/FormControls/index.js","pages/Login.js","pages/Signup.js","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["token","get","localStorage","getItem","set","setItem","clear","removeItem","payload","decode","error","console","log","isLoggedIn","exp","Date","now","user","id","axios","then","res","data","Promise","resolve","initialAuthState","isPending","defaultAuthValue","login","logout","signup","AuthContext","createContext","authReducer","state","action","type","Error","AuthProvider","props","useReducer","dispatch","useEffect","AuthService","catch","email","password","post","value","Provider","useAuth","useContext","className","style","margin","src","alt","title","useState","city","setCity","date","setDate","news","setNews","href","onClick","placeholder","onChange","e","target","params","articles","map","a","FullPageSpinner","text","role","Alert","children","rest","LoginAlert","position","top","BaseInputGroup","labelText","htmlFor","EmailInputGroup","name","PasswordInputGroup","Login","setEmail","setPassword","to","onSubmit","preventDefault","required","Signup","ProtectedRoute","onFailureRedirectToPath","App","exact","path","Member","Boolean","window","location","hostname","match","interceptors","request","use","config","bearerToken","headers","Authorization","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kRAGMA,EAAQ,CACZC,IAAK,kBAAMC,aAAaC,QAAQ,UAChCC,IAAK,SAAAJ,GAAK,OAAIE,aAAaG,QAAQ,QAASL,IAC5CM,MAAO,kBAAMJ,aAAaK,WAAW,UACrCC,QAAS,WACP,IACE,OAAOC,IAAOT,EAAMC,OACpB,MAAOS,GAEP,OADAC,QAAQC,IAAIF,GACL,QA2BAG,EAAa,WACxB,QAAKb,EAAMC,OAGUD,EAAMQ,UAAUM,IAAMC,KAAKC,MAAQ,KAI7CC,EAAO,WAClB,GAAIJ,IAAc,CAAC,IACTK,EAAOlB,EAAMQ,UAAbU,GACR,OAAOC,IAAMlB,IAAN,qBAAwBiB,IAAME,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKL,QAE5D,OAAOM,QAAQC,QAAQ,OC9CnBC,EAAmB,CACvBZ,YAAY,EACZI,KAAM,KACNS,WAAW,EACXhB,MAAO,IAGHiB,EAAgB,2BACjBF,GADiB,IAEpBG,MAAO,aACPC,OAAQ,aACRC,OAAQ,eAGJC,EAAcC,wBAAcL,GAE5BM,EAAc,SAACC,EAAOC,GAC1B,OAAQA,EAAOC,MACb,ICxBiB,QDyBf,OAAO,2BACFF,GADL,IAEExB,MAAOyB,EAAOzB,MACdgB,WAAW,IAEf,IC3BmB,UD4BjB,OAAO,2BACFQ,GADL,IAEER,WAAW,IAEf,IClCyB,gBDmCvB,OAAO,2BACFQ,GADL,IAEErB,YAAY,EACZI,KAAMkB,EAAOlB,KACbP,MAAO,GACPgB,WAAW,IAEf,ICzCkB,SD0ChB,OAAO,2BACFQ,GADL,IAEErB,YAAY,EACZa,WAAW,EACXT,KAAM,OAEV,QACE,MAAM,IAAIoB,MAAJ,0BAA6BF,EAAOC,SAInCE,EAAe,SAAAC,GAAU,IAAD,EACTC,qBAAWP,EAAaR,GADf,mBAC5BS,EAD4B,KACrBO,EADqB,KAG7BZ,EAAS,WDrBW7B,EAAMM,QCuB9BmC,EAAS,CAAEL,KC1DO,YDyEpBM,qBAXiB,WACXC,MACFF,EAAS,CAAEL,KC/DM,YDgEjBO,IACGvB,MAAK,SAAAH,GAAI,OAAIwB,EAAS,CAAEL,KCnEJ,gBDmEyBnB,YAC7C2B,OAAM,SAAAlC,GACLC,QAAQC,IAAIF,GACZmB,UAIY,IAEpB,IAAMD,EAAQ,SAACiB,EAAOC,GAEpB,OADAL,EAAS,CAAEL,KC3EQ,YF2BF,SAACS,EAAOC,GAC3B,OAAO3B,IAAM4B,KAAK,cAAe,CAAEF,QAAOC,aAAY1B,MAAK,SAAAC,GAEzD,OADArB,EAAMI,IAAIiB,EAAIC,KAAKtB,OACZA,EAAMQ,aC8CNmC,CAAkBE,EAAOC,GAC7B1B,MAAK,kBAAMuB,OACXvB,MAAK,SAAAH,GAAI,OAAIwB,EAAS,CAAEL,KChFF,gBDgFuBnB,YAC7C2B,OAAM,SAAAlC,GACLC,QAAQC,IAAIF,GACZ+B,EAAS,CACPL,KCrFW,QDsFX1B,MAAO,8CAkBTsC,EAAK,2BACNd,GADM,IAETN,QACAC,SACAC,OAjBa,SAACe,EAAOC,GACrBL,EAAS,CAAEL,KCzFQ,YFuBD,SAACS,EAAOC,GAC5B,OAAO3B,IAAM4B,KAAK,aAAc,CAAEF,QAAOC,aCkEvCH,CAAmBE,EAAOC,GACvB1B,MAAK,kBAAMQ,EAAMiB,EAAOC,MACxBF,OAAM,SAAAlC,GACLC,QAAQC,IAAIF,GACZ+B,EAAS,CACPL,KClGW,QDmGX1B,MAAO,gEAYf,OAAO,kBAACqB,EAAYkB,SAAb,eAAsBD,MAAOA,GAAWT,KAGpCW,EAAU,WACrB,OAAOC,qBAAWpB,IEjHL,kBAAEQ,EAAF,EAAEA,MAAF,OACf,yBAAKa,UAAU,SACX,yBAAKA,UAAU,OAAOC,MAAO,CAACC,OAAO,QACvC,yBAAKC,IAAI,MAAMH,UAAU,eAAeI,IAAI,QAC5C,yBAAKJ,UAAU,aACjB,wBAAIA,UAAU,cAAcb,EAAMkB,OAC9B,uBAAGL,UAAU,aAAb,sGCHW,aAAM,IAAD,EACKF,IAAXrB,GADM,EACZZ,KADY,EACNY,QADM,EAEG6B,mBAAS,IAFZ,mBAEbC,EAFa,KAERC,EAFQ,OAGGF,mBAAS,IAHZ,mBAGbG,EAHa,KAGRC,EAHQ,OAIGJ,mBAAS,IAJZ,mBAIbK,EAJa,KAIRC,EAJQ,KAUpB,OAAO,oCAAE,6BACL,yBAAKZ,UAAU,eAEb,wBAAIA,UAAU,6BACZ,4BAAI,uBAAGa,KAAK,YAAR,SACJ,4BAAI,uBAAGA,KAAK,YAAR,aACJ,wBAAIb,UAAU,SAASc,QAASrC,GAAQ,uBAAGoC,KAAK,KAAR,cAIhD,2BAAOE,YAAY,6BAA6BC,SAAU,SAACC,GAAD,OAAKT,EAAQS,EAAEC,OAAOtB,UAChF,2BAAQmB,YAAY,0CAA0CC,SAC1D,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOtB,UAC5B,4BAAQkB,QAjBa,WCTE,IAACK,KDUZ,CAACZ,OAAKE,QCViB1C,IAAM4B,KAAK,YAAawB,IDUlCnD,MAAK,gBAAEE,EAAF,EAAEA,KAAF,OAAU0C,EAAQ1C,EAAKkD,cAgBtBpB,UAAU,0BAAzC,UAEA,yBAAKA,UAAU,OACVW,EAAKU,KAAI,SAAAC,GAAC,OAAE,kBAAC,EAAD,CAAMnC,MAAOmC,QAI5B,4BAAQxD,GAAG,UAAX,uBEtBayD,EAXS,SAAC,GAAD,QAAGC,YAAH,MAAU,aAAV,SACtB,yBAAKxB,UAAU,gDACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBAAiByB,KAAK,UACnC,0BAAMzB,UAAU,WAAWwB,IAE7B,wBAAIxB,UAAU,8BAA8BwB,M,QCAnCE,EAND,SAAC,GAAD,QAAG1C,YAAH,MAAU,SAAV,EAAoB2C,EAApB,EAAoBA,SAAaC,EAAjC,0CACZ,uCAAK5B,UAAS,sBAAiBhB,IAAY4C,GACxCD,ICOUE,EARI,SAAC,GAAD,IAAGvE,EAAH,EAAGA,MAAH,OACjB,yBAAK2C,MAAO,CAAE6B,SAAU,aACtB,yBAAK9B,UAAU,aAAaC,MAAO,CAAE6B,SAAU,WAAYC,IAAK,IAC9D,kBAAC,EAAD,KAAQzE,MCJD0E,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWnE,EAAd,EAAcA,GAAO8D,EAArB,yCAC5B,oCACE,2BAAOM,QAASpE,EAAIkC,UAAU,WAC3BiC,GAEH,yCAAOnE,GAAIA,EAAIiD,YAAakB,EAAWjC,UAAU,gBAAmB4B,MAI3DO,EAAkB,SAAAhD,GAAK,OAClC,kBAAC,EAAD,eACE8C,UAAW,gBACXnE,GAAG,QACHsE,KAAK,QACLpD,KAAK,QACLgB,UAAU,gBACNb,KAIKkD,EAAqB,SAAAlD,GAAK,OACrC,kBAAC,EAAD,eACE8C,UAAU,WACVnE,GAAG,WACHsE,KAAK,WACLpD,KAAK,WACLgB,UAAU,gBACNb,KCyBOmD,EA3CD,WAAO,IAAD,EAC8BxC,IAAxCtB,EADU,EACVA,MAAOF,EADG,EACHA,UAAWb,EADR,EACQA,WAAYH,EADpB,EACoBA,MADpB,EAEQgD,mBAAS,IAFjB,mBAEXb,EAFW,KAEJ8C,EAFI,OAGcjC,mBAAS,IAHvB,mBAGXZ,EAHW,KAGD8C,EAHC,KASlB,OAAI/E,EACK,kBAAC,IAAD,CAAUgF,GAAG,MAGlBnE,EACK,kBAAC,EAAD,CAAiBkD,KAAK,yBAI7B,yBAAKxB,UAAU,sEACb,0BAAMA,UAAU,oBAAoB0C,SAfnB,SAAAzB,GACnBA,EAAE0B,iBACFnE,EAAMiB,EAAOC,KAcT,wBAAIM,UAAU,8BAAd,kBACA,kBAAC,EAAD,CACE4C,UAAQ,EACRhD,MAAOH,EACPuB,SAAU,SAAAC,GAAC,OAAIsB,EAAStB,EAAEC,OAAOtB,UAEnC,kBAAC,EAAD,CACEgD,UAAQ,EACRhD,MAAOF,EACPsB,SAAU,SAAAC,GAAC,OAAIuB,EAAYvB,EAAEC,OAAOtB,UAEtC,4BAAQZ,KAAK,SAASgB,UAAU,yCAAhC,UAGA,6BACE,kBAAC,IAAD,CAAMyC,GAAG,WAAT,sBAEDnF,GAAS,kBAAC,EAAD,CAAYA,MAAOA,OCOtBuF,EA7CA,WAAO,IAAD,EAC8B/C,IAAzCrC,EADW,EACXA,WAAYa,EADD,EACCA,UAAWI,EADZ,EACYA,OAAQpB,EADpB,EACoBA,MADpB,EAEOgD,mBAAS,IAFhB,mBAEZb,EAFY,KAEL8C,EAFK,OAGajC,mBAAS,IAHtB,mBAGZZ,EAHY,KAGF8C,EAHE,KAUnB,OAAI/E,EACK,kBAAC,IAAD,CAAUgF,GAAG,MAGlBnE,EACK,kBAAC,EAAD,CAAiBkD,KAAK,wBAI7B,yBAAKxB,UAAU,0DACb,0BAAMA,UAAU,oBAAoB0C,SAfnB,SAAAzB,GACnBA,EAAE0B,iBACFjE,EAAOe,EAAOC,KAcV,wBAAIM,UAAU,8BAAd,wBACA,kBAAC,EAAD,CACE4C,UAAQ,EACRhD,MAAOH,EACPuB,SAAU,SAAAC,GAAC,OAAIsB,EAAStB,EAAEC,OAAOtB,UAEnC,kBAAC,EAAD,CACEgD,UAAQ,EACRhD,MAAOF,EACPsB,SAAU,SAAAC,GAAC,OAAIuB,EAAYvB,EAAEC,OAAOtB,UAGtC,4BAAQZ,KAAK,SAASgB,UAAU,yCAAhC,WAGA,yDAC2B,kBAAC,IAAD,CAAMyC,GAAG,UAAT,UAE1BnF,GAAS,kBAAC,EAAD,CAAYA,MAAOA,OClCtBwF,EATQ,SAAC,GAAqD,IAAD,IAAlDC,+BAAkD,MAAxB,SAAwB,EAAXnB,EAAW,2CAE1E,OADuB9B,IAAfrC,WAEN,kBAAC,IAAUmE,GAEX,kBAAC,IAAD,CAAUa,GAAIM,KCmBHC,MApBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAgBC,OAAK,EAACC,KAAK,IAAIH,wBAAwB,UACrD,kBAACI,EAAD,OAEF,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAChB,kBAAC,EAAD,WCVQE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNzF,IAAM0F,aAAaC,QAAQC,KfSE,SAAAC,GAC3B,IAAMC,EAAcjH,EAAMC,MAI1B,OAHIgH,IACFD,EAAOE,QAAQC,cAAf,iBAAyCF,IAEpCD,KeZTI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtG,MAAK,SAAAuG,GACjCA,EAAaC,kB","file":"static/js/main.c4134bea.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport decode from \"jwt-decode\";\r\n\r\nconst token = {\r\n  get: () => localStorage.getItem(\"token\"),\r\n  set: token => localStorage.setItem(\"token\", token),\r\n  clear: () => localStorage.removeItem(\"token\"),\r\n  payload: () => {\r\n    try {\r\n      return decode(token.get());\r\n    } catch (error) {\r\n      console.log(error);\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\n// Interceptor middleware for axios that adds auth token to headers.\r\nexport const addAuthHeader = config => {\r\n  const bearerToken = token.get();\r\n  if (bearerToken) {\r\n    config.headers.Authorization = `Bearer ${bearerToken}`;\r\n  }\r\n  return config;\r\n};\r\n\r\nexport const signup = (email, password) => {\r\n  return axios.post(\"/api/users\", { email, password });\r\n};\r\n\r\nexport const login = (email, password) => {\r\n  return axios.post(\"/auth/login\", { email, password }).then(res => {\r\n    token.set(res.data.token);\r\n    return token.payload();\r\n  });\r\n};\r\n\r\nexport const logout = () => token.clear();\r\n\r\nexport const isLoggedIn = () => {\r\n  if (!token.get()) {\r\n    return false;\r\n  }\r\n  const isNotExpired = token.payload().exp > Date.now() / 1000;\r\n  return isNotExpired;\r\n};\r\n\r\nexport const user = () => {\r\n  if (isLoggedIn()) {\r\n    const { id } = token.payload();\r\n    return axios.get(`/api/users/${id}`).then(res => res.data.user);\r\n  }\r\n  return Promise.resolve(null);\r\n};\r\n\r\nexport const fetchUserData = () => user();\r\n","import React, { createContext, useReducer, useContext, useEffect } from \"react\";\r\nimport * as AuthService from \"./auth-service\";\r\nimport { ERROR, LOGIN_SUCCESS, LOGOUT, PENDING } from \"./actions\";\r\n\r\nexport * from \"./auth-service\";\r\n\r\nconst initialAuthState = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n  isPending: false,\r\n  error: \"\"\r\n};\r\n\r\nconst defaultAuthValue = {\r\n  ...initialAuthState,\r\n  login: () => {},\r\n  logout: () => {},\r\n  signup: () => {}\r\n};\r\n\r\nconst AuthContext = createContext(defaultAuthValue);\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        isPending: false\r\n      };\r\n    case PENDING:\r\n      return {\r\n        ...state,\r\n        isPending: true\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: action.user,\r\n        error: \"\",\r\n        isPending: false\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        isPending: false,\r\n        user: null\r\n      };\r\n    default:\r\n      throw new Error(`Invalid action: ${action.type}`);\r\n  }\r\n};\r\n\r\nexport const AuthProvider = props => {\r\n  const [state, dispatch] = useReducer(authReducer, initialAuthState);\r\n\r\n  const logout = () => {\r\n    AuthService.logout();\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n\r\n  // initialize auth state when auth provider is first mounted\r\n  const initAuth = () => {\r\n    if (AuthService.isLoggedIn()) {\r\n      dispatch({ type: PENDING });\r\n      AuthService.user()\r\n        .then(user => dispatch({ type: LOGIN_SUCCESS, user }))\r\n        .catch(error => {\r\n          console.log(error);\r\n          logout();\r\n        });\r\n    }\r\n  };\r\n  useEffect(initAuth, []);\r\n\r\n  const login = (email, password) => {\r\n    dispatch({ type: PENDING });\r\n    return AuthService.login(email, password)\r\n      .then(() => AuthService.user())\r\n      .then(user => dispatch({ type: LOGIN_SUCCESS, user }))\r\n      .catch(error => {\r\n        console.log(error);\r\n        dispatch({\r\n          type: ERROR,\r\n          error: \"Invalid email or password. Try again.\"\r\n        });\r\n      });\r\n  };\r\n\r\n  const signup = (email, password) => {\r\n    dispatch({ type: PENDING });\r\n    AuthService.signup(email, password)\r\n      .then(() => login(email, password))\r\n      .catch(error => {\r\n        console.log(error);\r\n        dispatch({\r\n          type: ERROR,\r\n          error: \"Invalid email and password or account already exists.\"\r\n        });\r\n      });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    logout,\r\n    signup\r\n  };\r\n\r\n  return <AuthContext.Provider value={value} {...props} />;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n","export const ERROR = \"ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const PENDING = \"PENDING\";\r\n","import React from \"react\";\r\n\r\nexport default ({props})=> \r\n<div className=\"col-2\">\r\n    <div className=\"card\" style={{margin:\"2vw\"}}>\r\n  <img src=\"...\" className=\"card-img-top\" alt=\"...\"/>\r\n  <div className=\"card-body\">\r\n<h5 className=\"card-title\">{props.title}</h5>\r\n    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n    {/* <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a> */}\r\n  </div>\r\n</div>\r\n</div>\r\n","import React,{useState} from 'react';\r\nimport {getNews} from '../utils/API';\r\nimport Card from '../components/NewsCard';\r\nimport { useAuth } from \"../utils/auth\";\r\n\r\nexport default ()=> {\r\nconst { user, logout } = useAuth();\r\nconst [city,setCity] = useState('');\r\nconst [date,setDate] = useState('');\r\nconst [news,setNews] = useState([]);\r\n\r\nconst handleSearch = () =>{\r\n    getNews({city,date}).then(({data})=>setNews(data.articles))\r\n}\r\n\r\nreturn <><nav>\r\n    <div className=\"nav-wrapper\">\r\n            {/* <a href=\"#\" className=\"brand-logo center\"></a> */}\r\n      <ul className=\"left hide-on-med-and-down\">\r\n        <li><a href=\"/members\">Home</a></li>\r\n        <li><a href=\"/content\">Contents</a></li>\r\n        <li className=\"active\" onClick={logout}><a href=\"#\">Logout</a></li>\r\n      </ul>\r\n      </div>\r\n</nav>\r\n<input placeholder=\"Where are you (city name?)\" onChange={(e)=>setCity(e.target.value)}/>\r\n< input placeholder=\"What date do you want? (year-month-day)\" onChange = {\r\n    (e) => setDate(e.target.value)}/>\r\n<button onClick={handleSearch} className=\"btn btn-warning btn-lg\">Submit</button>\r\n\r\n<div className='row'>\r\n    {news.map(a=><Card props={a}/>)}\r\n</div>\r\n \r\n\r\n  <footer id=\"footer\">© 2020 BillBoh</footer></>\r\n\r\n}","import axios from \"axios\";\r\n\r\nexport const getNews = (params) => axios.post('/api/news', params)","import React from \"react\";\r\n\r\nconst FullPageSpinner = ({ text = \"Loading...\" }) => (\r\n  <div className=\"vh-100 text-center d-flex align-items-center\">\r\n    <div className=\"w-100\">\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">{text}</span>\r\n      </div>\r\n      <h1 className=\"mt-3 h4 font-weight-normal\">{text}</h1>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default FullPageSpinner;\r\n","import React from \"react\";\r\n\r\nconst Alert = ({ type = \"danger\", children, ...rest }) => (\r\n  <div className={`alert alert-${type}`} {...rest}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst LoginAlert = ({ error }) => (\r\n  <div style={{ position: \"relative\" }}>\r\n    <div className=\"mt-3 w-100\" style={{ position: \"absolute\", top: 0 }}>\r\n      <Alert>{error}</Alert>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default LoginAlert;\r\n","import React from \"react\";\r\n\r\nexport const BaseInputGroup = ({ labelText, id, ...rest }) => (\r\n  <>\r\n    <label htmlFor={id} className=\"sr-only\">\r\n      {labelText}\r\n    </label>\r\n    <input id={id} placeholder={labelText} className=\"form-control\" {...rest} />\r\n  </>\r\n);\r\n\r\nexport const EmailInputGroup = props => (\r\n  <BaseInputGroup\r\n    labelText={\"Email address\"}\r\n    id=\"email\"\r\n    name=\"email\"\r\n    type=\"email\"\r\n    className=\"form-control\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport const PasswordInputGroup = props => (\r\n  <BaseInputGroup\r\n    labelText=\"Password\"\r\n    id=\"password\"\r\n    name=\"password\"\r\n    type=\"password\"\r\n    className=\"form-control\"\r\n    {...props}\r\n  />\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../utils/auth\";\r\nimport FullPageSpinner from \"../components/FullPageSpinner\";\r\nimport LoginAlert from \"../components/LoginAlert\";\r\nimport {\r\n  EmailInputGroup,\r\n  PasswordInputGroup\r\n} from \"../components/FormControls\";\r\n\r\nconst Login = () => {\r\n  const { login, isPending, isLoggedIn, error } = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (isPending) {\r\n    return <FullPageSpinner text=\"Verifying account...\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container vh-100 text-center d-flex align-items-center flex-column\">\r\n      <form className=\"form-login m-auto\" onSubmit={handleSubmit}>\r\n        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n        <EmailInputGroup\r\n          required\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <PasswordInputGroup\r\n          required\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"my-3 btn btn-lg btn-primary btn-block\">\r\n          Log In\r\n        </button>\r\n        <div>\r\n          <Link to=\"/signup\">Create an account</Link>\r\n        </div>\r\n        {error && <LoginAlert error={error} />}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../utils/auth\";\r\nimport {\r\n  EmailInputGroup,\r\n  PasswordInputGroup\r\n} from \"../components/FormControls\";\r\nimport LoginAlert from \"../components/LoginAlert\";\r\nimport FullPageSpinner from \"../components/FullPageSpinner\";\r\n\r\nconst Signup = () => {\r\n  const { isLoggedIn, isPending, signup, error } = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    signup(email, password);\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (isPending) {\r\n    return <FullPageSpinner text=\"Creating account...\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container vh-100 text-center d-flex align-items-center\">\r\n      <form className=\"form-login m-auto\" onSubmit={handleSubmit}>\r\n        <h1 className=\"h3 mb-3 font-weight-normal\">Create a new account</h1>\r\n        <EmailInputGroup\r\n          required\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <PasswordInputGroup\r\n          required\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n\r\n        <button type=\"submit\" className=\"my-3 btn btn-lg btn-primary btn-block\">\r\n          Sign up\r\n        </button>\r\n        <div>\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </div>\r\n        {error && <LoginAlert error={error} />}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"../utils/auth\";\r\n\r\n// Redirects to given path if user is not logged in. Defaults to /login if\r\n// the user is not logged in.\r\nconst ProtectedRoute = ({ onFailureRedirectToPath = \"/login\", ...rest }) => {\r\n  const { isLoggedIn } = useAuth();\r\n  return isLoggedIn ? (\r\n    <Route {...rest} />\r\n  ) : (\r\n    <Redirect to={onFailureRedirectToPath} />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { AuthProvider } from \"./utils/auth\";\r\nimport Member from \"./pages/Member\"\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Switch>\r\n          <ProtectedRoute exact path=\"/\" onFailureRedirectToPath=\"/login\">\r\n            <Member />\r\n          </ProtectedRoute>\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            <Signup />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { addAuthHeader } from \"./utils/auth\";\r\n\r\naxios.interceptors.request.use(addAuthHeader);\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}